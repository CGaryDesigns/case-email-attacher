<apex:page 
    applyBodyTag="true" 
    applyHtmlTag="false" 
    cache="false" 
    contentType="text/html" 
    docType="html-5.0"
    standardController="Case"
    extensions="CaseEmailAttachmentsActionExt"
    id="CaseEmailAttachmentsAction"
    label="CaseEmailAttachmentsAction"
    language="en-US"
    name="CaseEMailAttachmentsAction"
    showChat="false"
    showHeader="false"
    sidebar="false"
    standardStylesheets="true"
    title="Case Email with Attachments">
<html  xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" lang="en">
    <apex:includeScript id="AngularJSCore" value="https://cdnjs.cloudflare.com/ajax/libs/angular.js/1.6.5/angular.min.js"/>

    <apex:slds />

    <div class="slds-scope" ng-app="pageApp">
        <div class="slds-grid" ng-controller="MainController">
            <div class="slds-col">
                <ul class="slds-accordion">
                    <li class="slds-accordion__list-item">
                        <section ng-class="emailTemplateSelectionAccordion">
                            <div class="slds-accordion__summary">
                                <h3 class="slds-text-heading_small slds-accordion__summary-heading">
                                    <button aura-controls="accordion-details-01" aria-expanded="false" class="slds-button slds-button_reset slds-accordion__summary-action" ng-click="toggleTemplateSelection();">
                                        <svg class="slds-accordion__summary-action-icon slds-button__icon slds-button__icon_left" aria-hidden="true">
                                            <use xmlns:link="https://www.w3org/1999/xlink" xlink:href="{!URLFOR($Asset.SLDS,'/assets/icons/utility-sprite/svg/symbols.svg#switch')}"/>
                                        </svg>
                                        <span class="slds-truncate" title="Template Selection">Template Selection</span>
                                    </button>
                                </h3>
                            </div>

                            <div aria-hidden="true" class="slds-accordion__content" id="accordion-details-01">
                                <div class="slds-grid slds-grid_pull-padded-medium">
                                    <div class="slds-col slds-p-horizontal_medium">
                                        <div class="slds-form slds-form_stacked">
                                            <div class="slds-form-element">
                                                <label class="slds-form-element__label" for="select-template-folder">Template Folder</label>
                                                <div class="slds-form-element__control">
                                                    <div class="slds-select_container">
                                                        <select ng-model="templateFolder" name="select-template-folder" multiple="false" size="1" class="slds-select" ng-options="option.name for option in folderList">
                                                            
                                                        </select>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="slds-form-element">
                                                <button class="slds-button slds-button_neutral">
                                                    <span class="slds-text-not-selected" ng-click="selectFolder()">Select Folder</span>
                                                </button>
                                            </div>
                                            <div class="slds-form-element">
                                                <label class="slds-form-element__label" for="select-template">Template</label>
                                                <div class="slds-form-element__control">
                                                    <div class="slds-select_container">
                                                        <select ng-model="templateId" name="select-template" multiple="false" size="1" class="slds-select" ng-options="option.name for option in templateList">

                                                        </select>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="slds-form-element">
                                                <button class="slds-button slds-button_neutral">
                                                    <span class="slds-text-not-selected" ng-click="generateTemplate()">Generate Template</span>
                                                </button>
                                            </div>

                                        </div>

                                        <div class="slds-text-body_regular">
                                            {{emailData.debug}}
                                        </div>

                                        <div class="slds-text-body_regular">
                                            <ul class="slds-has-dividers_top">
                                                <li ng-repeat="fileItem in fileList">
                                                    {{fileItem.name}}
                                                </li>
                                            </ul>
                                        </div>

                                    </div>
                                </div>
                            </div>
                        </section>
                    </li>
                </ul>
            </div>
        </div>
    </div>

    <script type="text/javascript">
        var pageApp = angular
                        .module('pageApp',[])
                        .factory('SFDCFactory',['$rootScope','$log','$q',function($rootScope,$log,$q){
                            var factoryObj = {};
                            factoryObj.ObtainFolderList = function(){
                                var deferred = $q.defer();
                                Visualforce.remoting.Manager.invokeAction(
                                    '{!$RemoteAction.CaseEmailAttachmentsActionExt.ObtainEmailTemplateFolders}',
                                    function(result,event){
                                        $rootScope.$apply(function(){
                                            if(event.status){
                                                $log.info(result);
                                                deferred.resolve(result);
                                            } else {
                                                deferred.reject(event.message);
                                            }
                                        });
                                    },
                                    {
                                        escape:false,
                                        timeout:60000
                                    }
                                );
                                return deferred.promise;
                            }

                            factoryObj.ObtainTemplateList = function(folderId){
                                var deferred = $q.defer();
                                Visualforce.remoting.Manager.invokeAction(
                                    '{!$RemoteAction.CaseEmailAttachmentsActionExt.ObtainEmailTemplates}',
                                    folderId,
                                    function(result,event){
                                        $rootScope.$apply(function(){
                                            if(event.status){
                                                deferred.resolve(result);
                                            } else {
                                                deferred.reject(event.message);
                                            }
                                        });
                                    },
                                    {
                                        escape:false,
                                        timeout:60000
                                    }
                                );
                                return deferred.promise;
                            }

                            factoryObj.ObtainGeneratedEmail = function(templateId, caseId, contactId){
                                var deferred = $q.defer();
                                Visualforce.remoting.Manager.invokeAction(
                                    '{!$RemoteAction.CaseEmailAttachmentsActionExt.GetCompiledEmailBody}',
                                    templateId,
                                    caseId,
                                    contactId,
                                    function(result,event){
                                        $rootScope.$apply(function(){
                                            if(event.status){
                                                deferred.resolve(JSON.parse(result));
                                            } else {
                                                deferred.reject(event.message);
                                            }
                                        });
                                    },
                                    {
                                        escape:false,
                                        timeout:60000
                                    }
                                );
                                return deferred.promise;

                            }

                            factoryObj.GetFileList = function(caseId){
                                var deferred = $q.defer();
                                Visualforce.remoting.Manager.invokeAction(
                                    '{!$RemoteAction.CaseEmailAttachmentsActionExt.GetCaseAttachments}',
                                    caseId,
                                    function(result,event){
                                        $rootScope.$apply(function(){
                                            if(event.status){
                                                deferred.resolve(result);
                                            } else {
                                                deferrred.reject(event.message);
                                            }
                                        });
                                    },
                                    {
                                        escape:false,
                                        timeout: 60000
                                    }
                                );
                                return deferred.promise;
                            }

                            return factoryObj;
                        }])
                        .controller('MainController',['$scope','$window','$log','$q','SFDCFactory',function($scope,$window,$log,$q,SFDCFactory){
                            
                            //the object that controls the class for showing template info
                            $scope.emailTemplateSelectionAccordion = {
                                "slds-accordion__section":true,
                                "slds-is-open":false
                            };
                            //variable to hold list of case files
                            $scope.fileList = [];
                            //variable hold list of Email Template folders
                            $scope.folderList = [];
                            //variable to hold list of Email Templates
                            $scope.templateList = [];
                            //variable to hold selected folder
                            $scope.templateFolder = [];
                            //variable to hold the template Id
                            $scope.templateId = [];
                            $scope.caseId = '{!case.Id}';
                            $scope.contactId = '{!case.ContactId}';
                            $scope.emailData = {};
                            
                            /**
                             * function responsible for toggling the visibility
                             * of the Template selection area
                             **/
                            $scope.toggleTemplateSelection = function(){
                                $scope.emailTemplateSelectionAccordion['slds-is-open']  = !$scope.emailTemplateSelectionAccordion['slds-is-open'];
                            }
                            $scope.selectFolder = function(){
                                folderId = $scope.templateFolder[0].id;
                                SFDCFactory.ObtainTemplateList(folderId).then(
                                    function(result){
                                        $scope.templateList = [];
                                        for(key in result){
                                            var obj = {'name':key,'id':result[key]};
                                            $scope.templateList.push(obj);
                                        }
                                    },
                                    function(reject){
                                        $log.error('There was a problem: ' + reject);
                                    }
                                );
                            }

                            $scope.generateTemplate = function(){
                                var templateId = $scope.templateId[0].id;
                                SFDCFactory.ObtainGeneratedEmail(templateId,$scope.caseId,$scope.contactId).then(
                                    function(result){
                                        $log.info(result);
                                        $scope.emailData = result;
                                    },
                                    function(reject){
                                        $log.error('There was a problem: ' + reject);
                                    }
                                );
                            }
                            /**
                             * function that will be called to represent the initialization
                             * all processes that need to be run to set up the page are to be called
                             * here.
                             **/
                            var initialize = function(){
                                var InitializationPromiseArray = [
                                    SFDCFactory.ObtainFolderList(),
                                    SFDCFactory.GetFileList($scope.caseId)
                                ];
                                $q.all(InitializationPromiseArray).then(
                                    function(resultArray){
                                        for(key in resultArray[0]){
                                            var obj = { 'name':key, 'id':resultArray[0][key] };
                                            $scope.folderList.push(obj);
                                        }
                                        for(key in resultArray[1]){
                                            var obj = { 'name':key, 'id':resultArray[1][key] };
                                            $scope.fileList.push(obj);
                                        }
                                    },
                                    function(rejectionArray){
                                        $log.error(rejectionArray);
                                    }
                                )
                                //populate the folder select list
                                /*
                                SFDCFactory.ObtainFolderList().then(
                                    function(result){
                                        for(key in result){
                                            var obj = { 'name':key, 'id':result[key] };
                                            $scope.folderList.push(obj);
                                        }
                                    },
                                    function(reject){
                                        $log.error('There was a problem: ' + reject);
                                    }
                                );
                                */
                                //signal that the application has started
                                $log.info('Application Started.');
                            }

                            initialize();

                        }]);
    </script>
</html>
</apex:page>
